namespace LiveCodingTraining.Matrix;

public static class MatrixTasks
{
    /// <summary>
    /// Вычисляет сумму диагоналей квадратной матрицы.
    /// Включает все элементы главной диагонали (слева-сверху к справа-снизу)
    /// и все элементы побочной диагонали (справа-сверху к слева-снизу),
    /// при этом элемент на пересечении диагоналей учитывается только один раз.
    /// 
    /// Условие: Дана квадратная матрица mat размером n×n.
    /// Нужно вернуть сумму элементов главной и побочной диагоналей,
    /// исключив двойной подсчет центрального элемента (если матрица нечетного размера).
    /// 
    /// Примеры:
    /// Вход: mat = [[1,2,3],
    ///              [4,5,6],
    ///              [7,8,9]]
    /// Выход: 25
    /// Объяснение: Сумма диагоналей: 1 + 5 + 9 + 3 + 7 = 25
    /// Элемент mat[1][1] = 5 считается только один раз.
    /// 
    /// Вход: mat = [[1,1,1,1],
    ///              [1,1,1,1],
    ///              [1,1,1,1],
    ///              [1,1,1,1]]
    /// Выход: 8
    /// Объяснение: Главная диагональ: 1+1+1+1=4, Побочная диагональ: 1+1+1+1=4
    /// Общая сумма: 4+4=8 (пересечений нет, так как матрица четного размера)
    /// 
    /// Вход: mat = [[5]]
    /// Выход: 5
    /// Объяснение: Единственный элемент является частью обеих диагоналей,
    /// но считается только один раз.
    /// </summary>
    /// <param name="mat">Квадратная матрица размером n×n</param>
    /// <returns>Сумма элементов диагоналей</returns>
    public static int DiagonalSum(int[][] mat)
    {
        throw new NotImplementedException();
    }
}